// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model Workspace {
    id String @id @default(cuid())

    name   String
    secret String @unique

    links   Link[]
    apiKeys ApiKey[]

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model ApiKey {
    id String @id @default(cuid())

    key   String @unique
    label String

    permissions ApiKeyPermission[]

    workspace   Workspace @relation(fields: [workspaceId], references: [id], onDelete: Cascade)
    workspaceId String

    createdAt DateTime @default(now())

    @@index([id])
}

model Link {
    id String @id

    title String
    url   String

    shortName String? @unique

    engagements Engagement[]

    workspace   Workspace @relation(fields: [workspaceId], references: [id], onDelete: Cascade)
    workspaceId String

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    @@index([id, shortName])
}

model Engagement {
    id String @id @default(cuid())

    engagementType EngagementType @default(UNKNOWN)

    link   Link   @relation(fields: [linkId], references: [id], onDelete: Cascade)
    linkId String

    createdAt DateTime @default(now())
}

enum EngagementType {
    CLICK
    QR
    UNKNOWN
}

enum ApiKeyPermission {
    LINK_READ
    LINK_WRITE
    ENGAGEMENT_READ
}
